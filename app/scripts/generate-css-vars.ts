#!/usr/bin/env tsx
/////////////////////////////
///    IMPORTS SECTION    ///
/////////////////////////////
import fs from 'fs'
import path from 'path'
import { fileURLToPath } from 'url'
import { themeColors } from '@/lib/theme/colors'

/////////////////////////////
///   GENERATOR FUNCTION  ///
/////////////////////////////
function generateThemeCSS() {
    const { light, dark } = themeColors

    // Convert camelCase to kebab-case
    const toKebab = (str: string) => str.replace(/([A-Z])/g, '-$1').toLowerCase()

    // Generate CSS variables
    const generateVars = (colors: typeof light | typeof dark, indent = '  ') => {
        return Object.entries(colors)
            .map(([key, value]) => `${indent}--${toKebab(key)}: ${value};`)
            .join('\n')
    }

    const css =
        `/*****************************/
        /*      IMPORTS SECTION      */
        /*****************************/
        @import "tailwindcss";
        
        /*****************************/
        /*  AUTO-GENERATED THEME     */
        /*****************************/
        /* DO NOT EDIT THIS FILE MANUALLY */
        /* Edit lib/theme/colors.ts and run: npm run theme:generate */
        
        :root {
        ${generateVars(light)}
        }
        
        @media (prefers-color-scheme: dark) {
          :root {
        ${generateVars(dark)}
          }
        }
        
        /*****************************/
        /*       THEME SECTION       */
        /*****************************/
        @theme inline {
          --color-background: var(--background);
          --color-foreground: var(--foreground);
          --color-surface: var(--surface);
          --color-surface-elevated: var(--surface-elevated);
          
          --color-primary: var(--primary);
          --color-primary-hover: var(--primary-hover);
          --color-primary-light: var(--primary-light);
          --color-primary-dark: var(--primary-dark);
          --color-primary-foreground: var(--primary-foreground);
          
          --color-secondary: var(--secondary);
          --color-secondary-hover: var(--secondary-hover);
          --color-secondary-light: var(--secondary-light);
          --color-secondary-dark: var(--secondary-dark);
          --color-secondary-foreground: var(--secondary-foreground);
          
          --color-accent: var(--accent);
          --color-accent-hover: var(--accent-hover);
          --color-accent-light: var(--accent-light);
          --color-accent-dark: var(--accent-dark);
          --color-accent-foreground: var(--accent-foreground);
          
          --color-success: var(--success);
          --color-success-light: var(--success-light);
          --color-success-foreground: var(--success-foreground);
          
          --color-error: var(--error);
          --color-error-light: var(--error-light);
          --color-error-foreground: var(--error-foreground);
          
          --color-warning: var(--warning);
          --color-warning-light: var(--warning-light);
          --color-warning-foreground: var(--warning-foreground);
          
          --color-info: var(--info);
          --color-info-light: var(--info-light);
          --color-info-foreground: var(--info-foreground);
          
          --color-muted: var(--muted);
          --color-muted-foreground: var(--muted-foreground);
          
          --color-border: var(--border);
          --color-input: var(--input);
          --color-ring: var(--ring);
          
          --color-text-primary: var(--text-primary);
          --color-text-secondary: var(--text-secondary);
          --color-text-tertiary: var(--text-tertiary);
          --color-text-disabled: var(--text-disabled);
        }
        
        /*****************************/
        /*    BASE STYLES SECTION    */
        /*****************************/
        body {
          background: var(--background);
          color: var(--foreground);
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
            sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }
        
        * {
          box-sizing: border-box;
        }
    `

    // Write to globals.css
    const __dirname = path.dirname(fileURLToPath(import.meta.url))
    const outputPath = path.join(__dirname, '../app/globals.css')
    fs.writeFileSync(outputPath, css)
    console.log('Generated app/globals.css from lib/theme/colors.ts')
}

/////////////////////////////
///    EXECUTE SCRIPT     ///
/////////////////////////////
generateThemeCSS()
